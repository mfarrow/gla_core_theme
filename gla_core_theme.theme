<?php

/**
 * @file
 * Functions to support theming in the Pattern Lab theme.
 */

// Include all files from the includes directory….
$includes_path = dirname(__FILE__) . '/includes/*.inc';
foreach (glob($includes_path) as $filename) {
  require_once dirname(__FILE__) . '/includes/' . basename($filename);
}
// …and the includes/suggestions subdirectory.
$includes_path = dirname(__FILE__) . '/includes/suggestions/*.inc';
foreach (glob($includes_path) as $filename) {
  require_once dirname(__FILE__) . '/includes/suggestions/' . basename($filename);
}

/**
 * Implements hook_preprocess().
 */
function gla_core_theme_preprocess(&$variables) {
  // Provide some path-related variables to Twig templates.
  $handler = \Drupal::service('theme_handler');
  $variables['base_path'] = base_path();
  $variables['theme_path'] = base_path() . $handler->getTheme('gla_core_theme')->getPath();
}

/**
 * Implements hook_page_attachments_alter().
 */
function gla_core_theme_page_attachments_alter(array &$attachments) {
  // Update viewport metatag to work with iPhone notch.
  // https://julian.is/article/iphone-x-notch/
  $viewport_metatag = [
    '#type' => 'html_tag',
    '#tag' => 'meta',
    '#attributes' => [
      'name' => 'viewport',
      'content' => 'width=device-width, initial-scale=1, viewport-fit=cover',
    ],
  ];

  // Don't try and turn strings of digits into telephone links on iOS as this
  // can interfere with display of non-telephone related numbers.
  $format_detection_metatag = [
    '#type' => 'html_tag',
    '#tag' => 'meta',
    '#attributes' => [
      'name' => 'format-detection',
      'content' => 'telephone=no',
    ],
  ];

  // Preconnect to Google Fonts origins.
  $preconnect_googleapis_link = [
    '#type' => 'html_tag',
    '#tag' => 'link',
    '#attributes' => [
      'rel' => 'preconnect',
      'href' => 'https://fonts.googleapis.com',
    ],
  ];
  $preconnect_fontsgstatic_link = [
    '#type' => 'html_tag',
    '#tag' => 'link',
    '#attributes' => [
      'rel' => 'preconnect',
      'href' => 'https://fonts.googleapis.com',
      'crossorigin' => '',
    ],
  ];

  // Attach elements into the HTML Head.
  $attachments['#attached']['html_head'][] =
      [$viewport_metatag, 'viewport'];
  $attachments['#attached']['html_head'][] =
      [$format_detection_metatag, 'format-detection'];
  $attachments['#attached']['html_head'][] =
      [$preconnect_googleapis_link, 'preconnect-googleapis'];
  $attachments['#attached']['html_head'][] =
      [$preconnect_fontsgstatic_link, 'preconnect-fontsgstatic'];

  // Remove the core favicon as we supply our own.
  foreach ($attachments['#attached']['html_head_link'] as $key => $value) {
    if (isset($value[0]['rel']) && $value[0]['rel'] == 'shortcut icon') {
      unset($attachments['#attached']['html_head_link'][$key]);
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function gla_core_theme_preprocess_html(&$variables) {
  if ($variables['html_attributes']['lang'] == 'en') {
    // This helps with screenreader pronunciation.
    $variables['html_attributes']['lang'] = 'en-gb';
  }
}

/**
 * Implements hook_theme().
 */
function gla_core_theme_theme($existing, $type, $theme, $path) {
  return [
    // The single underscore is intentional.
    'field_no_wrappers' => [
      'variables' => [],
      // Reuse the existing template used by the template suggestions approach
      // to removing field wrappers.
      'template' => 'field/field--no-wrappers',
    ],
  ];
}
